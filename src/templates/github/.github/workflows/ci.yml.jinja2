# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: {{ project_name }}

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches:
      - 'main'
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - 'main'

  # Allow manually trigger
  workflow_dispatch: {}

jobs:
  Quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python 3.10.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.8

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Analyze Syntax
        run: |
          python -m invoke lint

      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=src" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          python -m invoke coverage

      {% raw %}
      - name: Report Coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
      {% endraw %}

  Release:
    needs: Quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python 3.10.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.8

      - name: Upgrading PIP
        run: |
          python -m pip install --upgrade pip

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      {% raw %}
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_TOKEN }}
      {% endraw %}